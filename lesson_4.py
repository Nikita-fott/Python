#1. Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной платы сотрудника.
# В расчете необходимо использовать формулу: (выработка в часах * ставка в час) + премия.
# Для выполнения расчета для конкретных значений необходимо запускать скрипт с параметрами.

from sys import argv
script_name, time_work, rate, bonus = argv
print("Имя скрипта: ", script_name)
try:
    time_work = float(time_work)
    rate = float(rate)
    bonus = float(bonus)
    salary = time_work * rate + bonus
    print(salary)
except ValueError:
    print('Целую часть числа отделить точкой')


#2. Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. Для формирования списка использовать генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].

numbers = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]

numbers_new = [numbers[i] for i in range(1, len(numbers)) if numbers[i] > numbers[i-1]]
print(numbers_new)

#3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. Необходимо решить задание в одну строку.
#Подсказка: использовать функцию range() и генератор.

print(f'Все числа кратные числа 20 и 21 в пределах от 20 до 240 {[i for i in range(20, 241) if i % 20 == 0 or i % 21 == 0]}')

#4. Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать итоговый массив чисел, соответствующих требованию.
# Элементы вывести в порядке их следования в исходном списке.
# Для выполнения задания обязательно использовать генератор.
#Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
#Результат: [23, 1, 3, 10, 4, 11]

numbers = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
unique_numbers = [i for i in numbers if numbers.count(i) == 1]
print(unique_numbers)

#5. Реализовать формирование списка, используя функцию range() и возможности генератора.
# В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.
#Подсказка: использовать функцию reduce().

from functools import reduce

def summa(a, b):
   return a * b

numbers = [i for i in range(100, 1001, 2)]
print(numbers)
print(reduce(summa, numbers))

#6. Реализовать два небольших скрипта:
#а) итератор, генерирующий целые числа, начиная с указанного,
#б) итератор, повторяющий элементы некоторого списка, определенного заранее.
#Подсказка: использовать функцию count() и cycle() модуля itertools.
# Обратите внимание, что создаваемый цикл не должен быть бесконечным.
# Необходимо предусмотреть условие его завершения.
#Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
# Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.

from itertools import count, cycle

start_number = int(input('Введите число: '))
stop = start_number ** 2 + 5
print(stop)

#a
for el in count(start_number):
    if el > stop:
        break
    else:
        print(el)

#b
brand_phone = ['apple', 'samsung', 'oppo', 'blackberry']

n = 1
for i in cycle(brand_phone):
    if n > stop:
        break
    print(i)
    n *= 2

#7. Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
# При вызове функции должен создаваться объект-генератор.
# Функция должна вызываться следующим образом: for el in fact(n).
# Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
#Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.

def fact(n):
    factorial = 1
    fact_numbers = (i for i in range(1, n + 1))
    for el in fact_numbers:
        factorial *= el
        yield factorial

i = 0
for el in fact(20):
    if i > 10:
        break
    else:
        print(el)
    i += 1

#через модуль math

from math import factorial

def fact(n):
    for el in range(1, n+1):
        yield factorial(el)

i = 0
for el in fact(20):
    if i > 10:
        break
    else:
        print(el)
    i += 1
